diff --git a/Gemfile b/Gemfile
index 37c12556..d02732f2 100644
--- a/Gemfile
+++ b/Gemfile
@@ -50,19 +50,5 @@ gem 'rubocop-rspec'
 gem 'shoulda-context'
 gem 'simplecov', '~> 0.17', '< 0.18'
 gem 'test-unit', '~> 2'
-gem 'typhoeus', '~> 1.4'
 gem 'webmock', '~> 2.0'
 gem 'yard'
-
-gem 'curb' unless defined? JRUBY_VERSION
-gem 'faraday-patron' unless defined? JRUBY_VERSION
-gem 'patron' unless defined? JRUBY_VERSION
-
-gem 'require-prof' unless defined?(JRUBY_VERSION) || defined?(Rubinius)
-gem 'ruby-prof' unless defined?(JRUBY_VERSION) || defined?(Rubinius)
-
-gem 'manticore' if defined? JRUBY_VERSION
-gem 'pry-nav' if defined? JRUBY_VERSION
-
-gem 'faraday', ENV.fetch('FARADAY_VERSION', nil), require: false if ENV.key?('FARADAY_VERSION')
-gem 'faraday-typhoeus' if !ENV.key?('FARADAY_VERSION') && Gem::Version.new(RUBY_VERSION) >= Gem::Version.new('2.6')
diff --git a/lib/opensearch.rb b/lib/opensearch.rb
index dacb76ef..69dcf21d 100644
--- a/lib/opensearch.rb
+++ b/lib/opensearch.rb
@@ -69,8 +69,8 @@ module OpenSearch
              else
                response.body
              end
-      version = body.dig('version', 'number')
-      distribution = body.dig('version', 'distribution')
+      version = body['version'] && body['version']['number']
+      distribution = body['version'] && body['version']['distribution']
       verify_version_and_distribution(version, distribution)
     end
 
diff --git a/lib/opensearch/api/utils.rb b/lib/opensearch/api/utils.rb
index 4eb20f68..ba90eea0 100644
--- a/lib/opensearch/api/utils.rb
+++ b/lib/opensearch/api/utils.rb
@@ -255,7 +255,8 @@ module OpenSearch
 
           message = "[!] You are using unsupported parameter [:#{name}]"
 
-          if (source = caller&.last)
+          source = caller.last if caller
+          if (source)
             message += " in `#{source}`"
           end
 
@@ -277,7 +278,8 @@ module OpenSearch
 
       def __report_unsupported_method(name)
         message = "[!] You are using unsupported method [#{name}]"
-        if (source = caller&.last)
+        source = caller.last if caller
+        if (source)
           message += " in `#{source}`"
         end
 
diff --git a/lib/opensearch/dsl/search/base_component.rb b/lib/opensearch/dsl/search/base_component.rb
index 9dbe37c3..20cf6bca 100644
--- a/lib/opensearch/dsl/search/base_component.rb
+++ b/lib/opensearch/dsl/search/base_component.rb
@@ -74,7 +74,7 @@ module OpenSearch
               else
                 __send__ :define_method, name do |*args|
                   # 1. Component has empty @args (ie. no user supplied name or @hash value)
-                  if @args.respond_to?(:to_hash) && @args&.empty?
+                  if @args.respond_to?(:to_hash) && @args && @args.empty?
                     @hash[self.name.to_sym].update name.to_sym => args.first
                   # 2. Component user-supplied name or @hash value passed in @args
                   else
diff --git a/lib/opensearch/transport/client.rb b/lib/opensearch/transport/client.rb
index acbb9281..e0ce2d59 100644
--- a/lib/opensearch/transport/client.rb
+++ b/lib/opensearch/transport/client.rb
@@ -173,7 +173,7 @@ module OpenSearch
                          @arguments[:adapter] ||= __auto_detect_adapter
                          @transport_class.new(hosts: @seeds, options: @arguments) do |faraday|
                            faraday.adapter(@arguments[:adapter])
-                           block&.call faraday
+                           block.call faraday if block
                          end
                        else
                          @transport_class.new(hosts: @seeds, options: @arguments)
@@ -214,7 +214,7 @@ module OpenSearch
       end
 
       def add_header(header)
-        headers = @arguments[:transport_options]&.[](:headers) || {}
+        headers = @arguments[:transport_options].to_a[:headers] || {}
         headers.merge!(header)
         @arguments[:transport_options].merge!(
           headers: headers
@@ -317,7 +317,7 @@ module OpenSearch
         end
 
         host_parts[:port] = host_parts[:port].to_i if host_parts[:port]
-        host_parts[:path]&.chomp!('/')
+        host_parts[:path].to_s.chomp!('/')
         host_parts
       end
 
diff --git a/lib/opensearch/transport/transport/base.rb b/lib/opensearch/transport/transport/base.rb
index dd0c71e2..6b57ce93 100644
--- a/lib/opensearch/transport/transport/base.rb
+++ b/lib/opensearch/transport/transport/base.rb
@@ -298,7 +298,7 @@ module OpenSearch
 
             response = block.call(connection, url)
 
-            connection.healthy! if connection.failures.positive?
+            connection.healthy! if connection.failures > 0
 
             # Raise an exception so we can catch it for `retry_on_status`
             if response.status.to_i >= 300 && @retry_on_status.include?(response.status.to_i)
@@ -369,7 +369,7 @@ module OpenSearch
                     duration
           end
 
-          warnings(response.headers['warning']) if response.headers&.[]('warning')
+          warnings(response.headers['warning']) if response.headers && response.headers['warning']
 
           Response.new response.status, json || response.body, response.headers
         ensure
diff --git a/lib/opensearch/transport/transport/connections/connection.rb b/lib/opensearch/transport/transport/connections/connection.rb
index bc0030bb..5e64f859 100644
--- a/lib/opensearch/transport/transport/connections/connection.rb
+++ b/lib/opensearch/transport/transport/connections/connection.rb
@@ -68,7 +68,7 @@ module OpenSearch
             url += "#{host[:host]}:#{host[:port]}"
             url += host[:path].to_s if host[:path]
             full_path = full_path(path, params)
-            url += '/' unless full_path.match?(%r{^/})
+            url += '/' unless full_path.match(%r{^/})
             url += full_path
           end
 
diff --git a/lib/opensearch/transport/transport/http/curb.rb b/lib/opensearch/transport/transport/http/curb.rb
index 6ef1a74a..f8a66289 100644
--- a/lib/opensearch/transport/transport/http/curb.rb
+++ b/lib/opensearch/transport/transport/http/curb.rb
@@ -75,11 +75,11 @@ module OpenSearch
             headers_string = connection.connection.header_str
             return nil if headers_string.nil?
 
-            response_headers = headers_string&.split(/\\r\\n|\r\n/)&.reject(&:empty?)
+            response_headers = headers_string.to_s.split(/\\r\\n|\r\n/).reject(&:empty?)
             response_headers.shift # Removes HTTP status string
             processed_header = response_headers.flat_map { |s| s.scan(/^(\S+): (.+)/) }
             headers_hash = processed_header.to_h.transform_keys(&:downcase)
-            if headers_hash['content-type']&.match?(%r{application/json})
+            if headers_hash['content-type'].to_s.match(%r{application/json})
               headers_hash['content-type'] = 'application/json'
             end
             headers_hash
diff --git a/lib/opensearch/transport/transport/loggable.rb b/lib/opensearch/transport/transport/loggable.rb
index 111a36d8..3330b468 100644
--- a/lib/opensearch/transport/transport/loggable.rb
+++ b/lib/opensearch/transport/transport/loggable.rb
@@ -38,7 +38,7 @@ module OpenSearch
     #
     # @since 7.0.0
     def log_debug(message)
-      logger.debug(message) if logger&.debug?
+      logger.debug(message) if logger
     end
 
     # Log an error message.
@@ -50,7 +50,7 @@ module OpenSearch
     #
     # @since 7.0.0
     def log_error(message)
-      logger.error(message) if logger&.error?
+      logger.error(message) if logger
     end
 
     # Log a fatal message.
@@ -62,7 +62,7 @@ module OpenSearch
     #
     # @since 7.0.0
     def log_fatal(message)
-      logger.fatal(message) if logger&.fatal?
+      logger.fatal(message) if logger
     end
 
     # Log an info message.
@@ -74,7 +74,7 @@ module OpenSearch
     #
     # @since 7.0.0
     def log_info(message)
-      logger.info(message) if logger&.info?
+      logger.info(message) if logger
     end
 
     # Log a warn message.
@@ -86,7 +86,7 @@ module OpenSearch
     #
     # @since 7.0.0
     def log_warn(message)
-      logger.warn(message) if logger&.warn?
+      logger.warn(message) if logger
     end
   end
 end
diff --git a/opensearch-ruby.gemspec b/opensearch-ruby.gemspec
index 568a6803..8fe1fa91 100644
--- a/opensearch-ruby.gemspec
+++ b/opensearch-ruby.gemspec
@@ -34,11 +34,6 @@ Gem::Specification.new do |s|
   s.summary       = 'Ruby Client for OpenSearch'
   s.homepage      = 'https://github.com/opensearch-project/opensearch-ruby'
   s.license       = 'Apache-2.0'
-  s.description   = <<~DESC
-    OpenSearch Ruby is a Ruby client for OpenSearch. You can use the client to
-    execute OpenSearch API commands, and build OpenSearch queries and aggregations
-    using the included OpenSearch DSL.
-  DESC
   s.metadata = {
     'homepage_uri' => 'https://github.com/opensearch-project/opensearch-ruby',
     'documentation_uri' => 'https://rubydoc.info/gems/opensearch-ruby',
@@ -63,8 +58,5 @@ Gem::Specification.new do |s|
     s.cert_chain  = ['.github/opensearch-rubygems.pem']
   end
 
-  s.required_ruby_version = '>= 2.5'
-
-  s.add_dependency 'faraday', '>= 1.0', '< 3'
   s.add_dependency 'multi_json'
 end
